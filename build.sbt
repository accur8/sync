
// 
// DO NOT EDIT THIS FILE IT IS MACHINE GENERATED
// 
// This file is generated from modules.conf using `a8-versions build_dot_sbt`
// 
// It was generated at 2022-01-31T17:26:05.981685900 by glen on fullfillment
// 
// a8-versions build/versioning info follows
// 
// 
// 
//      

val appVersion = a8.sbt_a8.versionStamp(file("."))

val scalaLibVersion = "2.13.6"
val sbtA8Version = "1.2.0-20220113_1040"

scalacOptions in Global ++= Seq("-deprecation", "-unchecked", "-feature")


publishTo in Global := sonatypePublishToBundle.value
credentials in Global += Credentials(Path.userHome / ".sbt" / "sonatype.credentials")

scalaVersion in Global := scalaLibVersion

organization in Global := "io.accur8"

version in Global := appVersion

versionScheme in Global := Some("strict")

serverConnectionType in Global := ConnectionType.Local


lazy val api =
  Common
    .jvmProject("a8-sync-api", file("api"), "api")
    .dependsOn(sharedJVM)
    .settings(
      libraryDependencies ++= Seq(
        "co.fs2" %% "fs2-io" % "3.2.4",
        "net.sf.jt400" % "jt400" % "10.7",
        "com.zaxxer" % "HikariCP" % "4.0.3",
        "org.scalatest" %% "scalatest" % "3.2.10" % "test",
      )
    )


lazy val shared =
  Common
    .crossProject("a8-sync-shared", file("shared"), "shared")
    .settings(
      libraryDependencies ++= Seq(
        "com.softwaremill.sttp.client3" %% "core" % "3.3.18",
        "com.softwaremill.sttp.client3" %% "async-http-client-backend-cats" % "3.3.18",
        "com.github.cb372" %%% "cats-retry" % "3.1.0",
        "com.beachape" %%% "enumeratum" % "1.7.0",
        "com.lihaoyi" %%% "sourcecode" % "0.2.7",
        "org.typelevel" %% "case-insensitive" % "1.2.0",
        "org.typelevel" %% "cats-effect" % "3.3.4",
        "co.fs2" %% "fs2-core" % "3.2.4",
        "com.softwaremill.sttp.model" %% "core" % "1.4.20",
        "org.wvlet.airframe" %% "airframe-log" % "22.1.0",
        "org.slf4j" % "slf4j-jdk14" % "2.0.0-alpha5",
        "org.scalactic" %% "scalactic" % "3.2.10",
        "org.scalatest" %% "scalatest" % "3.2.10" % "test",
        "org.typelevel" %% "jawn-parser" % "1.3.2",
        "org.typelevel" %% "jawn-ast" % "1.3.2",
      )
    )
    .jvmSettings(
      libraryDependencies ++= Seq(
        "com.github.andyglow" %% "typesafe-config-scala" % "2.0.0",
        "org.postgresql" % "postgresql" % "42.3.1",
        "net.sf.jt400" % "jt400" % "10.7",
        "com.zaxxer" % "HikariCP" % "4.0.3",
        "com.sun.mail" % "jakarta.mail" % "2.0.1",
      )
    )
    .jsSettings(
      libraryDependencies ++= Seq(
        "org.scala-js" %%% "scalajs-dom" % "1.2.0",
      )
    )

lazy val sharedJVM = shared.jvm
lazy val sharedJS = shared.js


lazy val root =
  Common.jvmProject("root", file("target/root"), id = "root")
    .settings( publish := {} )
    .settings( com.jsuereth.sbtpgp.PgpKeys.publishSigned := {} )
    .aggregate(api)
    .aggregate(sharedJS)
    .aggregate(sharedJVM)



   
